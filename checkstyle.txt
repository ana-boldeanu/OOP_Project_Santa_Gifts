Starting audit...
[ERROR] D:\GitHub\POO_Proiect1\.\src\checker\Checker.java:9:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] D:\GitHub\POO_Proiect1\.\src\checker\Checker.java:35:30: '19' is a magic number. [MagicNumber]
[ERROR] D:\GitHub\POO_Proiect1\.\src\checker\Checker.java:101:49: '15' is a magic number. [MagicNumber]
[ERROR] D:\GitHub\POO_Proiect1\.\src\checker\Checker.java:101:55: '3' is a magic number. [MagicNumber]
[ERROR] D:\GitHub\POO_Proiect1\.\src\checker\Checker.java:101:59: '4' is a magic number. [MagicNumber]
[ERROR] D:\GitHub\POO_Proiect1\.\src\database\Child.java:107:57: '100' is a magic number. [MagicNumber]
[ERROR] D:\GitHub\POO_Proiect1\.\src\database\Child.java:109:28: '10.0' is a magic number. [MagicNumber]
[ERROR] D:\GitHub\POO_Proiect1\.\src\database\Child.java:110:28: '10.0' is a magic number. [MagicNumber]
[ERROR] D:\GitHub\POO_Proiect1\.\src\database\CityScore.java:17:22: Parameter cityEnum should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Proiect1\.\src\database\CityScore.java:17:39: Parameter averageScore should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Proiect1\.\src\database\CityScore.java:22:5: Class 'CityScore' looks like designed for extension (can be subclassed), but the method 'computeCityScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CityScore' final or making the method 'computeCityScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Proiect1\.\src\database\CityScore.java:22:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Proiect1\.\src\database\CityScore.java:22:34: Parameter currChildrenList should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Proiect1\.\src\database\CityScore.java:36:5: Class 'CityScore' looks like designed for extension (can be subclassed), but the method 'getCityEnum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CityScore' final or making the method 'getCityEnum' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Proiect1\.\src\database\CityScore.java:40:5: Class 'CityScore' looks like designed for extension (can be subclassed), but the method 'getAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CityScore' final or making the method 'getAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Proiect1\.\src\database\CityScore.java:44:5: Class 'CityScore' looks like designed for extension (can be subclassed), but the method 'setAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CityScore' final or making the method 'setAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Proiect1\.\src\database\CityScore.java:44:33: Parameter averageScore should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Proiect1\.\src\database\GiftType.java:31:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Proiect1\.\src\database\ReceivedGift.java:19:25: Parameter productName should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Proiect1\.\src\database\ReceivedGift.java:19:45: Parameter price should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Proiect1\.\src\database\ReceivedGift.java:19:59: Parameter category should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Proiect1\.\src\database\ReceivedGift.java:25:5: Class 'ReceivedGift' looks like designed for extension (can be subclassed), but the method 'getProductName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ReceivedGift' final or making the method 'getProductName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Proiect1\.\src\database\ReceivedGift.java:29:5: Class 'ReceivedGift' looks like designed for extension (can be subclassed), but the method 'getPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ReceivedGift' final or making the method 'getPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Proiect1\.\src\database\ReceivedGift.java:33:5: Class 'ReceivedGift' looks like designed for extension (can be subclassed), but the method 'getCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ReceivedGift' final or making the method 'getCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Proiect1\.\src\database\ReceivedGift.java:37:5: Class 'ReceivedGift' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ReceivedGift' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Proiect1\.\src\fileio\InputLoader.java:34:5: Method length is 179 lines (max allowed is 150). [MethodLength]
[ERROR] D:\GitHub\POO_Proiect1\.\src\fileio\Utils.java:4:8: Unused import - enums.Cities. [UnusedImports]
[ERROR] D:\GitHub\POO_Proiect1\.\src\score_strategies\AverageScoreStrategy.java:1:9: Name 'score_strategies' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\GitHub\POO_Proiect1\.\src\score_strategies\AverageStrategyFactory.java:1:9: Name 'score_strategies' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\GitHub\POO_Proiect1\.\src\score_strategies\BabyAverageScore.java:1:9: Name 'score_strategies' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\GitHub\POO_Proiect1\.\src\score_strategies\KidAverageScore.java:1:9: Name 'score_strategies' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\GitHub\POO_Proiect1\.\src\score_strategies\TeenAverageScore.java:1:9: Name 'score_strategies' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\GitHub\POO_Proiect1\.\src\score_strategies\YoungAdultAverageScore.java:1:9: Name 'score_strategies' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\ChildrenSorter.java:5:8: Unused import - enums.Cities. [UnusedImports]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\ChildrenSorter.java:7:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\ChildrenSorter.java:10:5: Class 'ChildrenSorter' looks like designed for extension (can be subclassed), but the method 'sortChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenSorter' final or making the method 'sortChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\ChildrenSorter.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\ChildrenSorter.java:10:37: Parameter childrenList should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\ChildrenSorter.java:10:63: Parameter distributionStrategy should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\ChildrenSorter.java:11:30: Parameter cityScores should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\ChildrenSorter.java:27:5: Class 'ChildrenSorter' looks like designed for extension (can be subclassed), but the method 'sortById' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenSorter' final or making the method 'sortById' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\ChildrenSorter.java:27:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\ChildrenSorter.java:27:33: Parameter childrenList should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\ChildrenSorter.java:30:32: Parameter o1 should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\ChildrenSorter.java:30:42: Parameter o2 should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\ChildrenSorter.java:38:5: Class 'ChildrenSorter' looks like designed for extension (can be subclassed), but the method 'sortByChildScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenSorter' final or making the method 'sortByChildScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\ChildrenSorter.java:38:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\ChildrenSorter.java:38:41: Parameter childrenList should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\ChildrenSorter.java:41:32: Parameter o1 should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\ChildrenSorter.java:41:42: Parameter o2 should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\ChildrenSorter.java:54:5: Class 'ChildrenSorter' looks like designed for extension (can be subclassed), but the method 'sortByCityScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenSorter' final or making the method 'sortByCityScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\ChildrenSorter.java:54:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\ChildrenSorter.java:54:40: Parameter childrenList should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\ChildrenSorter.java:54:66: Parameter cityScores should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\ChildrenSorter.java:58:32: Parameter o1 should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\ChildrenSorter.java:58:46: Parameter o2 should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\ChildrenSorter.java:85:36: Parameter o1 should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\ChildrenSorter.java:85:46: Parameter o2 should be final. [FinalParameters]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\output\ChildOutput.java:3:8: Unused import - database.GiftType. [UnusedImports]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\Round.java:4:16: Using the '.*' form of import should be avoided - database.*. [AvoidStarImport]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\Round.java:14:8: Unused import - java.util.Map. [UnusedImports]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\Round.java:78:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\Round.java:107:43: Inner assignments should be avoided. [InnerAssignment]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\Round.java:107:60: '30' is a magic number. [MagicNumber]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\Round.java:107:65: '100' is a magic number. [MagicNumber]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\Round.java:108:42: Inner assignments should be avoided. [InnerAssignment]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\Round.java:108:59: '30' is a magic number. [MagicNumber]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\Round.java:108:64: '100' is a magic number. [MagicNumber]
[ERROR] D:\GitHub\POO_Proiect1\.\src\simulation\Round.java:120:33: Parameter distributionStrategy should be final. [FinalParameters]
Audit done.
Checkstyle ends with 69 errors.
